{{Info/Software
| nome                = Asterisk
| logo                = 
| imagem              = 
| legenda             = 
| desenvolvedor       = [[Digium]] e Comunidade
| data_lancamento     = 
| ultima_versao       = 1.0
| ultima_data         = [[26 de Outubro]] de [[2013]]
| sistema_operacional = Todos compatíveis com Java 7
| genero              = PABX IP/Softphone
| licença             = [[OpenSource]] e [[GNU]]
| website             = 
}}
FUNDAÇÃO
EDSON QUEIROZ

[[File:Images/Unifor.png|center|34x37px|caption]]

UNIVERSIDADE
DE FORTALEZA

UNIFOR




README da versão 1.0 beta do
RTPhone

Aluno: Judah Holanda Correia Lima

= RTPhone =

== Introdução ==
Este documento tem como objetivo explicar o funcionamento do RTPhone em sua versão 1.0, mostrar propostas de melhoria e introduzir o padrão de projeto que deve ser utilizado. Além de compor a nota.

== Arquitetura do Sistema ==
=== Atual ===
==== Geral ====
==== Banco de Dados ====
[[File:Images/Database.png]]

O Banco de Dados possui nove tabelas. Uma tabela possui o username que funciona como chave primária de tabela, uma para authenticação (senha), e outra com o status e o endureço (IP ou url) que se diferente de nulo significa que o usuário está logado. Outra terá um conjunto de Banco de Dados que o usuário poderá se logar (a fim de deixar alguns usuários privados de um determinado sistema que tenha esse banco de dados com usuários, além de possibilitar trunks). E outra que terá um conjunto de usuários e senhas para acessos a estes Bancos de Dados.

==== Protocolos ====
===== Registro =====
[[File:Images/Register.png]]

Nesta configuração o próprio cliente vai fazer a consulta no Banco de Dados e verificar se ele existe e caso não exista ele se registra no Banco. 

===== Login =====
[[File:Images/Login.png]]

Nesta configuração o próprio cliente vai fazer a consulta no Banco de Dados e verificar se ele existe e se não está logado e se loga no Banco. Após isto ele faz um broadcast a todos os seus contatos (e monitores) logados informando que ele acaba de se logar, para que possam atualizar suas tabelas. 

===== Logoff =====
[[File:Images/Logoff.png]]

Nesta configuração o próprio cliente vai fazer a consulta no Banco de Dados e verificar se ele existe e se está logado e se desloga no Banco. Após isto ele faz um broadcast a todos os  informando que ele acaba de se deslogar, para que possam atualizar suas tabelas. Ele é acionado ao fechar a aplicação.

===== Refresh =====
[[File:Images/Refresh.png]]

A cada 10 segundo o cliente faz uma requisição pedindo todos os usuários logados e registrados e atualiza a lista, o mesmo acontece com o servidor, mas apenas quando inicia.

===== Chamada =====
[[File:Images/Call.png]]

[[File:Images/Call2.png]]

Nesta configuração o próprio cliente vai fazer a consulta no Banco de Dados e resgatar o endereço do usuário o qual ele deseja se conectar e então chama a função no cliente o qual ele deseja conectar enviando seu username endereço e portas livres para conexão (que nada mais é que uma lista de portas livres para transmissão e recepção), esta função retorna uma classe Call que possui o endereço o qual ele vai se conectar, um áudio de espera (caso haja transferência de chamada), as portas de transmissão e recepção e outros dados de conexão. 

== Implementação ==
=== IDE ===
A IDE utilizada foi o NetBeans. Devido á facilidade de se implementar RMI e devido aos plug-ins que já vem por padrão. Como plug-in para criação e edição de interface gráfica, JDBC e etc.

=== Linguagem ===
A linguagem utilizada foi o Java 7. Devido a sua grande comunidade e documentação além, é claro, das facilidades.

=== Banco de Dados ===
O Banco de Dados utilizado foi o MySQL, devido as facilidades oferecidas pela ferrramenta MySQL Workbench.

=== Plataforma ===
A plataforma (SO's e Arquiteturas (x86, x64, alguns Arms com Java convencional)) escolhida foram todas as que o Java dá suporte. Embora se tenha encontrado problemas com o firewall no Windows 8 (Não permite nenhuma conexão nem RMI) e no Linux (Não aceita conexão RTP, mas estabelece quando ele quem a requisita). Nos Sistemas Operacionais Mountain Lion e Windows 7 não houveram problemas. O modelo de interface gráfica escolhido foi a padrão do sistema que utilizará o programa.

=== Bibliotecas e Recursos Utilizados ===
Para comunicação Servidor/Cliente foi utilizado a biblioteca padrão do Java para RMI (Remote Method Invocation). A qual permite uma invocação de métodos remotamente e assincronamente algo que o TCP não permitia facilmente.

Para a conexão RTP foi feita uma pesquisa onde foi encontrado um programa com uma conexão simples de áudio RTP. Então foi extraído o core RTP (que estava fortemente acoplado ao código).

=== Padrão de Projeto ===
Para facilitar a leitura do código algumas regras devem ser seguidas:

	1)O código deve ser feito todo em inglês, com exceção dos comentários que podem ser feitos em português por exemplo.
	
	2)Não podem haver siglas em métodos, variáveis e classes, devem ser escritos por extenso.
	
	3)Não pode existir caracteres especiais em métodos, variáveis e classes, como: _.
	
	4)Deve seguir o notação "camelo" na declaração e instancia de métodos, variáveis e classes.(Classes devem começar com letra maiúscula e instancias de objetos e variáveis com letra minúscula e o resto das letras minúsculas, mas para cada nova palavra na variável deve-se começar com maiúscula)
	
	5)Deve-se seguir a identação padrão do NetBeans.

=== Uso do Repositório ===
==== Edição do README ====
Para alterar o texto deste arquivo basta entrar aqui:[https://github.com/Judahh/RTPhone/edit/master/README.mediawiki], ao terminar existe um bloco abaixo com o título do commit e sua descrição, e claro o botão para enviar o commit, "Commit Changes". Caso deseje enviar as alterações clique neste botão. Caso queira apenas ver as alterações acima do bloco de edição existe um botão "Preview" que mostra como as alterações vão ficar.

Para alterar as Imagens deste arquivo deve-se alterar apartir de uma ferramenta GIT. As imagens estão na pasta "Images".

Para adicionar Imagens neste arquivo deve-se colocar <code>[[File:Images/"nome da imagem".png]]</code> no local desejado. A imagem deve estar na pasta "Images".

==== Edição do Código ====
Para alterar o código deve-se alterar apartir de uma ferramenta GIT.

Caso altere um arquivo já existente adicione seu nome e e-mail como subAuthor, caso crie um novo arquivo copie as linhas que existem de copyright e licença que existem na maioria dos aquivos e adicione meu nome e e-mail como subAuthor (devido a criação do repositório, Nome: Judah Holanda Correia Lima, E-mail: judahholanda7@gmail.com). Caso copie um arquivo, coloque o copyright e credidos do autor.

==== Edição do Banco de Dados ====
Para se alterar o Banco de dados deve-se apenas conectá-lo a partir de uma ferramenta, recomendo o MySQL Workbench. Os dados para conexão estão no código de conexão do Banco de Dados do RTPhone.

==== Ferramenta GIT ====
Para conectar com o repositório git recomendo utilizar a do github para Mac e Windows. Baixe-a, e conecte a sua conta do git (para ter acesso ao repositório me mande um e-mail).

Clone o repositório (basta clicar duas vezes no repositório desejado, caso já o tenha clonado ele irá para página de sincronização). Nesta página existe um botão para sincronizar com o repositório do github com o seu que foi clonado, recomenda-se que antes de sincronizar as alterações do seu repositório, sincronize as alterações que existem no github, depois commite suas alterações no seu repositório (caso não tenha sido commitadas) e depois sincronize.

==== Repositório do github ====
===== Gerência do github =====
Na página web do repositório do github, são oferecidas muitas ferramentas para gerencia de progresso do projeto e de seus participantes que podem ser vistas aqui:[https://github.com/Judahh/RTPhone/graphs].

Existe também para gerencia de erros, correções e upgrades:[https://github.com/Judahh/RTPhone/issues?state=open].

Para adicionar uma nova basta clicar em "New Issue" ou [https://github.com/Judahh/RTPhone/issues/new]. Nesta página coloca-se o título do problema, ou upgrade (em Inglês), e abaixo sua descrição que pode ser feita em português. Ao lado existe Labels que identificam o tipo do problema (basta clicar nos desejados).Ao terminar basta clicar no botão "Subimit new issue".

Caso o problema tenha sido resolvido, selecione o problema e clique em "Close".

Caso um problema que já tenha sido resovido volte clique na aba "Closed", selecione o problema e clique em "Reopen".

Caso queira adicionar uma Label, selecione o problema e clique em "Label", selecione uma Label e clique em "Apply" ou "Remove", caso queira apenas remover uma Label.

Caso querira atribuir o problema para um integrante resolver clique em "Assignee" e selecione o integrane ou clique no "x" para removê-lo.

===== Wiki do github =====
Existe tabém um wiki para descrição do projeto:[https://github.com/Judahh/RTPhone/wiki].

=== Uso ===
Existem varias maneiras de usar iniciar depois de dado o build no projeto:

==== Iniciar: ====
1)IDE Debug:
	Basca clicar no ícone do inseto no NetBeans (ou IDE utilizada)

2)IDE Run:
	Basca clicar no ícone do "play" no NetBeans (ou IDE utilizada).

3)Debug:
	Entre no terminal:
		Digite: cd diretório do projeto/dist
		Digite: java -jar projeto.jar

4)Run:
	Entre no diretório e basta clicar no jar do projeto

==== Client: ====
1)Digite Nome, Usuário e Senha.

2)Caso o usuário ainda não esteja registrado: Clique em Register.

3)Clique em Login.

4)Caso queira ligar para outro usuário selecione a aba Logged Users e selecione o usuário o qual deseja fazer a ligação, depois de selecionado clique em Call.

5)Para desligar clique em Hung Up.

Release: O programa jar executável vai estar na pasta dist então passe apenas para o usuário o conteúdo desta pasta.

== Instalação e Uso ==
=== Requisitos: ===
-Internet

-Windows 7 ou Mac (Ou Linux (e com IP configurado no arquivo hosts) e Windows 8 com firewall configurados)

=== Instalação: ===
Não tem, basta baixar o programa aqui: [https://github.com/Judahh/RTPhone/releases/tag/1.0-beta], o executável está na pasta, com a extensão .jar .

=== Uso: ===
==== Cliente: ====
1)Caso esteja no sistema Linux:
		Entre no terminal:
		Digite: cd diretório do projeto/dist
		Digite: java -jar RTPhoneClient.jar:

Caso não esteja basta clicar no executável:

[[File:Images/Executable.png]]

2)Digite Nome, Usuário e Senha.

3)Caso o usuário ainda não esteja registrado: Clique em Register.

4)Clique em Login.

5)Caso queira ligar para outro usuário selecione o usuário o qual deseja fazer a ligação, depois de selecionado clique em Call.

6)Para desligar clique em Hung Up.

== Definições ==
=== Client ===
É o usuário com as permissões mais básicas.

==== Conexões ====
[[File:Images/Client.png]]

=== Agent ===
É um Client que tem a possibilidade de ser atribuido para atender uma Queue, e com a possibilidade de transferir uma ligação para outra Queue.

==== Conexões ====
[[File:Images/Agent.png]]

=== Monitor ===
É um Client que tem a possibilidade de supervisionar outros Clients, mesmo que um não seja contato do outro.

Além de poder remover e deslogar usuários.

==== Conexões ====
[[File:Images/Monitor.png]]

Estas conexões indicam a comunicação entre monitores e monitores/usuários, onde se envia dados sobre os monitorados.

==== Hierarquia ====
[[File:Images/Monitor2.png]]

Esta hierarquia indica os monitores que tem o poder de deslogar e remover os outros monitores.

==== Dados ====
-receiveMonitorList: É um boolean que indica se ele deve receber a lista dos monitores, dos monitores que monitora.

-receiveUserList: É um boolean que indica se ele deve receber a lista dos usuários, dos monitores que monitora.

-receiveUserStatus: É um boolean que indica se ele deve receber os status dos usuários que monitora.

-receiveMonitorStatus: É um boolean que indica se ele deve receber os status dos monitores que monitora.

-areaType: É o Tipo de área que o monitor monitora (Country, State, City...).

-area: É a chave estrangeira da tabela área (que possui: identification, name, type).

-type: É o tipo de monitor (na Hierarquia).

=== Queue ===
É uma fila de atendimento, que possui Clients e Agents, Onde os Agents atendem os Clients da fila.

==== Conexões ====
[[File:Images/Queue.png]]

=== Extension ===
É uma conexão com a linha telefônica, ou outro ponto de convergencia.

==== Conexões ====
[[File:Images/Extension.png]]

=== Conference ===
É uma conferencia de Clients, que pode ser de Texto, Áudio ou Vídeo.

==== Conexões ====
[[File:Images/Conference.png]]

=== Trunk ===
É uma conexão com um banco de dados secundário, mas que tenha as mesmas tabelas do primário.

==== Conexões ====
[[File:Images/Trunk.png]]

== Limitações e Correções ==
Basta clicar aqui:[https://github.com/Judahh/RTPhone/issues?state=open].

== Bibliografia ==
* Disponível em [http://bcook.cs.georgiasouthern.edu/cs523/2taj/index.htm] 
  Acesso em 10/2013

* Disponível em [http://restfb.com/]
  Acesso em 10/2013

[[Categoria:Software livre]]
